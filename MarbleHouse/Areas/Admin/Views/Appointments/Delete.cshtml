@model MarbleHouse.Models.ViewModels.AppointmentDetailsViewModel
@using MarbleHouse.Extensions
@using MarbleHouse.Utility

@{
    ViewData["Title"] = "Delete";
}

<br />
<br />

<h4 class="text-info">Delete Appointment</h4>

<form method="post">
    <div class="p-lg-4 border rounded row">
        <input hidden asp-for="Appointments.Id" />
        <div class="col-6">

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.CustomerName"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.CustomerName" class="form-control" disabled/>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.CustomerEMail"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.CustomerEMail" class="form-control" disabled/>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.AppointmentDate"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.AppointmentDate" id="datepicker" type="text" class="form-control" disabled/>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.AppointmentTime"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.AppointmentTime" class="timepicker form-control" type="text" disabled/>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.CustomerPhoneNumber"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.CustomerPhoneNumber" class="form-control" disabled/>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.SalesPerson"></label>
                </div>
                <div class="col-8">
                    @if (User.IsInRole(SD.AdminEndUser))
                    {
                        <input asp-for="@Model.Appointments.SalesPerson.Name" class="form-control" readonly />
                        <input asp-for="@Model.Appointments.SalesPersonId" class="form-control" readonly />
                    }
                    else
                    {
                        <select asp-for="@Model.Appointments.SalesPersonId" asp-items="Model.SalesPerson.ToSelectListItemString(Model.Appointments.SalesPersonId)" class="form-control" disabled></select>
                    }
                </div>
            </div>

            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.isConfirmed"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.isConfirmed" class="form-control" disabled/>
                </div>
            </div>

        </div>
        <div class="col-6">
            <partial name="~/Views/Shared/_AppointmentProjectDetails.cshtml" model="Model.Products" />
        </div>
        <br />
        <div class="form-group">
            <input type="submit" class="btn btn-danger" asp-route-id="@Model.Appointments.Id" value="Delete" />
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>
    </div>
</form>


@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
            $('.timepicker').timepicker({
                timeFormat: 'h:mm p',
                interval: 30,
                minTime: '10',
                maxTime: '3:00pm',
                startTime: '10:00',
                dynamic: true,
                dropdown: true,
                scrollbar: true
            });

            $(function () {
                $("#datepicker").datepicker({
                    minDate: +1, maxDate: "+3M", dateFormat: 'dd-mm-yy'
                });
            });

            $(document).ready(function () {
                var appointmentTime = document.getElementById('datepicker').value;
                var splitData = "";
                console.log(appointmentTime)
                if (appointmentTime.indexOf(" ") > 0) {
                    splitData = appointmentTime.split(" ");
                }
                else {
                    splitData = appointmentTime.split("T");

                }

                var time = splitData[1].substring(0, 5);
                if (time.slice(-1) == ":") {
                    time = time.substring(0, time.length - 1);
                }
                console.log(splitData[0])
                console.log(time)
                if (time.substring(0, 2) > 12) {
                    amPmTime = 'PM'

                } else {
                    amPmTime='AM'
                }
                $('#datepicker').attr('value', splitData[0]);
                $('.timepicker').attr('value', time + ' ' + amPmTime);

            });

    </script>
}